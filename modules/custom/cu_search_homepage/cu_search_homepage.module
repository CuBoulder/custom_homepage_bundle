<?php

/**
 * @file
 * cu_search_homepage feature. Includes contexts, variables (via strongarm).
 * a box, permissions, and custom code and functionality.
 */

include_once('cu_search_homepage.features.inc');

/**
 * Implements hook_menu().
 */
function cu_search_homepage_menu() {
  $items['gsearch'] = array(
    'title' => 'GSA Redirect',
    'page callback' => 'cu_search_homepage_gsearch_redirect',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_init().
 *
 * Legacy search will go to /search/all/redirect?[...]
 * Following code looks for 'a=' for search query
 */
function cu_search_homepage_gsearch_redirect() {
  $all =  array('all', 'people', 'facstaff', 'students');
  if (arg(0) == 'gsearch' && in_array(arg(1), $all)) {
    drupal_goto('search', array('query' => array('cse' => arg(2))));
  }

  if (arg(0) == 'gsearch' && !in_array(arg(1), $all)) {
    drupal_goto('search', array('query' => array('cse' => arg(1))));
  }
}

/**
 * Implements hook_menu_alter().
 *
 * Takes over search from the google appliance module.
 */
function cu_search_homepage_menu_alter(&$items) {
  $items['search'] = array(
    'title' => t('Search CU Boulder'),
    'page callback' => 'cu_search_homepage_search_view',
    'page arguments' => array(1, 2, 3), // Scope (all, fac, people...), Search Keys, Sort
    'access arguments' => array('view_cu_search_homepage_results'),
  );
}

/**
 * Implements hook_permission().
 */
function cu_search_homepage_permission() {
  return array(
    'view_cu_search_homepage_results' => array(
      'title' => 'View search results',
      'description' => 'View search results on search/*',
    ),
  );
}

/**
 * Page callback for search/*
 *
 * For now, simply a wrapper around the appliance's search results.
 */
function cu_search_homepage_search_view($scope = 'all', $keys, $sort = NULL) {
  $content = array();
  return $content;
}

/**
 * Wrapper around _cu_search_homepage_search_form() for small form.
 */
function cu_search_homepage_search_form_small($form, &$form_state) {
  $form = _cu_search_homepage_search_form('small');
  return $form;
}

/**
 * Wrapper around _cu_search_homepage_search_form for full form.
 */
function cu_search_homepage_search_form_full($form, &$form_state) {
  $form = _cu_search_homepage_search_form('full');
  return $form;
}

/*
 * Implements hook_form_FORM_ID_alter
 */

function cu_search_homepage_form_google_appliance_block_form_alter(&$form, &$form_state, $form_id) {
  $form['#submit'][0] = '_cu_search_homepage_search_form_submit';
}

/**
 * Search form.
 */
function _cu_search_homepage_search_form($display = 'small') {
  $form = array();

  // Setup default keys from arg(1).
  $default_keys = arg(0) == 'search' ? urldecode(check_plain(arg(2))) : '';

  // If on search page with no keys, show title, otherwise hide.
  $title_display = (arg(0) == 'search' && !arg(2)) ? 'before' : 'invisible';
  $form['search_keys'] = array(
    '#type' => 'textfield',
    '#title' => t('Enter the terms you wish to search for.'),
    '#title_display' =>  $title_display,
    '#size' => 15,
    '#default_value' => $default_keys,
    '#autocomplete_path' => 'suggest',
    '#attributes' => array(
      'class' => array('auto_submit'),
    ),
  );

  $default_scope = urlencode(arg(1));
  if ($display == 'full') {
    $form['search_scope'] = array(
      '#type' => 'select',
      '#options' => array('all' => 'All (websites)', 'people' => 'All People', 'facstaff' => 'Faculty/Staff', 'students' => 'Students',),
      '#default_value' => $default_scope,
    );
  }
  $form['actions'] = array(
    '#type' => 'actions',
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Search'),
    ),
  );

  $form['#submit'][] = '_cu_search_homepage_search_form_submit';
  return $form;
}

/**
 * Submit handler for cu_search_homepage_search_form (small and full).
 *
 * Simply sets the form redirect to search/KEYS.
 */
function _cu_search_homepage_search_form_submit($form, &$form_state) {
  // Kill any dynamic destinations.
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  // Set the redirect.
  $search_scope = !empty($form_state['values']['search_scope']) ? urlencode($form_state['values']['search_scope']) : 'all';

  //If someone submits the search box without changing the default text, then we don't want the database to be searched, we just want them to hit the blank search page. This ternary if should handle that case.
  $search_query = $form_state['values']['search_keys']==trim("Search Sites + People") ? NULL : urlencode($form_state['values']['search_keys']);
  $form_state['redirect'] = url('search/' . $search_scope . '/' . $search_query, array('absolute' => TRUE));
}

